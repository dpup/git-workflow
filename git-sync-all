#!/usr/bin/env python
#
# git-sync-all
#
# Script for syncing the master branch with origin and rebasing all branches
# against mater.
#
# Usage:
# $ git sync-all
#

import sys
import os
import git
import util

go = util.prompt_y_n('Are you absolutely sure?')
if not go:
	util.warn('Ok, nothing to see here...')

try:
    repo = git.Repo(os.getcwd(), search_parent_directories=True)
except git.exc.InvalidGitRepositoryError:
    util.fatal('git sync-all must be run from within a valid git repository.')

util.fatal_if_dirty(repo)

initial_branch = repo.active_branch
util.update_master(repo, initial_branch)

for r in repo.branches:
	if r.name != 'master':
		util.info('Syncing out %s' % r)
		r.checkout()
		try:
			repo.git.rebase('master')
		except:
			repo.git.rebase('--abort')
			initial_branch.checkout()
			util.fatal('Failed to sync %s, please try manually' % r)

initial_branch.checkout()

util.success('Master synced with origin, and all branches rebased')
